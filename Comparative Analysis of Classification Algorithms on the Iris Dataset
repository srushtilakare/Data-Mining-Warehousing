import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score

# Load dataset
url = "https://raw.githubusercontent.com/uiuc-cse/data-fa14/gh-pages/data/iris.csv"
df = pd.read_csv(url)

# Encode species column to numeric
le = LabelEncoder()
df['species'] = le.fit_transform(df['species'])

# Features and target
X = df.drop('species', axis=1)
y = df['species']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize classifiers
knn = KNeighborsClassifier()
svm = SVC()
dt = DecisionTreeClassifier()

# Train and predict
knn.fit(X_train, y_train)
svm.fit(X_train, y_train)
dt.fit(X_train, y_train)

knn_pred = knn.predict(X_test)
svm_pred = svm.predict(X_test)
dt_pred = dt.predict(X_test)

# Accuracy scores
knn_acc = accuracy_score(y_test, knn_pred)
svm_acc = accuracy_score(y_test, svm_pred)
dt_acc = accuracy_score(y_test, dt_pred)

# Display results
print("Accuracy Comparison:")
print(f"K-Nearest Neighbors: {knn_acc:.2f}")
print(f"Support Vector Machine: {svm_acc:.2f}")
print(f"Decision Tree: {dt_acc:.2f}")
